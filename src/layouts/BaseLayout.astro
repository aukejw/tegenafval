---
export interface Props {
    title: string;
}
const { title } = Astro.props;
const baseUrl = import.meta.env.BASE_URL;
---

<!doctype html>
<html lang="nl">
    <head>
        <link rel="icon" href="/favicons/favicon.ico" sizes="any" />
        <link rel="icon" href="/favicons/icon.svg" type="image/svg+xml" />
        <link rel="apple-touch-icon" href="/favicons/apple-touch-icon.png" />
        <link rel="manifest" href="/favicons/manifest.webmanifest" />

        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1, viewport-fit=cover"
        />

        <title>{title}</title>
        <link rel="stylesheet" href={`${baseUrl}style.css`} />
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const baseUrl = import.meta.env.BASE_URL;

                // Dark mode toggle
                const darkModeToggle =
                    document.getElementById("dark-mode-toggle");
                const prefersDarkScheme = window.matchMedia(
                    "(prefers-color-scheme: dark)",
                );

                // Check for saved theme preference or default to system preference
                const currentTheme = localStorage.getItem("theme");
                if (
                    currentTheme === "dark" ||
                    (!currentTheme && prefersDarkScheme.matches)
                ) {
                    document.body.classList.add("dark-mode");
                    if (darkModeToggle) {
                        darkModeToggle.textContent = "‚òÄÔ∏è";
                    }
                } else {
                    document.body.classList.remove("dark-mode");
                    if (darkModeToggle) {
                        darkModeToggle.textContent = "üåô";
                    }
                }

                if (darkModeToggle) {
                    darkModeToggle.addEventListener("click", function () {
                        document.body.classList.toggle("dark-mode");
                        const isDark =
                            document.body.classList.contains("dark-mode");
                        localStorage.setItem(
                            "theme",
                            isDark ? "dark" : "light",
                        );
                        darkModeToggle.textContent = isDark ? "‚òÄÔ∏è" : "üåô";
                    });
                }

                // Language toggle functionality
                const languageToggle =
                    document.getElementById("language-toggle");

                // Detect current language from URL path
                const currentPath = window.location.pathname;
                let currentLang;
                if (currentPath.includes("/en/")) {
                    currentLang = "en";
                } else {
                    currentLang = "nl";
                }

                // Update localStorage and UI
                localStorage.setItem("language", currentLang);
                updateLanguage(currentLang);

                if (languageToggle) {
                    languageToggle.addEventListener("click", function () {
                        currentLang = currentLang === "nl" ? "en" : "nl";
                        localStorage.setItem("language", currentLang);
                        updateLanguage(currentLang);

                        // Navigate to the corresponding page in the new language
                        const currentPath = window.location.pathname;
                        let newPath;

                        if (currentLang === "en") {
                            if (currentPath.includes("/nl/")) {
                                newPath = currentPath.replace("/nl/", "/en/");
                            } else {
                                newPath = `${baseUrl}en/home`;
                            }
                        } else {
                            if (currentPath.includes("/en/")) {
                                newPath = currentPath.replace("/en/", "/nl/");
                            } else {
                                newPath = `${baseUrl}nl/home`;
                            }
                        }

                        window.location.href = newPath;
                    });
                }

                function updateLanguage(lang) {
                    const navLinks = document.querySelectorAll(
                        ".main-nav a",
                    ) as NodeListOf<HTMLAnchorElement>;
                    const languageToggle =
                        document.getElementById("language-toggle");

                    if (lang === "en") {
                        // Update navigation links to English
                        navLinks[0].href = `${baseUrl}en/home`;
                        navLinks[0].textContent = "Home";
                        navLinks[1].href = `${baseUrl}en/probleem`;
                        navLinks[1].textContent = "The problem";
                        navLinks[2].href = `${baseUrl}en/oplossingen`;
                        navLinks[2].textContent = "How can I help?";
                        navLinks[3].href = `${baseUrl}en/gemeente`;
                        navLinks[3].textContent =
                            "What about the municipality?";

                        if (languageToggle) {
                            languageToggle.textContent = "NL";
                        }
                    } else {
                        // Update navigation links to Dutch
                        navLinks[0].href = `${baseUrl}nl/home`;
                        navLinks[0].textContent = "Home";
                        navLinks[1].href = `${baseUrl}nl/probleem`;
                        navLinks[1].textContent = "Het probleem";
                        navLinks[2].href = `${baseUrl}nl/oplossingen`;
                        navLinks[2].textContent = "Kan ik meer doen?";
                        navLinks[3].href = `${baseUrl}nl/gemeente`;
                        navLinks[3].textContent = "Wat doet de gemeente?";

                        if (languageToggle) {
                            languageToggle.textContent = "EN";
                        }
                    }
                }
            });
        </script>
    </head>
    <body>
        <main>
            <div class="content-container">
                <slot />
            </div>
        </main>
        <nav class="main-nav">
            <ul>
                <li><a href={`${baseUrl}nl/home`}>Home</a></li>
                <li><a href={`${baseUrl}nl/probleem`}>Het probleem</a></li>
                <li>
                    <a href={`${baseUrl}nl/oplossingen`}>Kan ik meer doen?</a>
                </li>
                <li>
                    <a href={`${baseUrl}nl/gemeente`}>Wat doet de gemeente?</a>
                </li>
            </ul>
            <div class="nav-buttons">
                <button id="language-toggle" class="language-toggle">EN</button>
                <button id="dark-mode-toggle" class="dark-mode-toggle"
                    >üåô</button
                >
            </div>
        </nav>
    </body>
</html>
