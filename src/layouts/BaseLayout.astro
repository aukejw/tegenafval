---
export interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="nl">
    <head>
        <link rel="icon" href="/favicons/favicon.ico" sizes="any" />
        <link rel="icon" href="/favicons/icon.svg" type="image/svg+xml" />
        <link rel="apple-touch-icon" href="/favicons/apple-touch-icon.png" />
        <link rel="manifest" href="/favicons/manifest.webmanifest" />

        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover">

        <title>{title}</title>
        <link rel="stylesheet" href="/tegenafval/style.css" />
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                // Dark mode toggle 
                const darkModeToggle = document.getElementById('dark-mode-toggle');
                const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
                
                // Check for saved theme preference or default to system preference
                const currentTheme = localStorage.getItem('theme');
                if (currentTheme === 'dark' || (!currentTheme && prefersDarkScheme.matches)) {
                    document.body.classList.add('dark-mode');
                    if (darkModeToggle) {
                        darkModeToggle.textContent = '‚òÄÔ∏è';
                    }
                } else {
                    document.body.classList.remove('dark-mode');
                    if (darkModeToggle) {
                        darkModeToggle.textContent = 'üåô';
                    }
                }

                if (darkModeToggle) {
                    darkModeToggle.addEventListener('click', function() {
                        document.body.classList.toggle('dark-mode');
                        const isDark = document.body.classList.contains('dark-mode');
                        localStorage.setItem('theme', isDark ? 'dark' : 'light');
                        darkModeToggle.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';
                    });
                }

                // Language toggle functionality
                const languageToggle = document.getElementById('language-toggle');
                let currentLang = localStorage.getItem('language') || 'nl';
                updateLanguage(currentLang);
                
                if (languageToggle) {
                    languageToggle.addEventListener('click', function() {
                        currentLang = currentLang === 'nl' ? 'en' : 'nl';
                        localStorage.setItem('language', currentLang);
                        updateLanguage(currentLang);
                        
                        // Navigate to the corresponding page in the new language
                        const currentPath = window.location.pathname;
                        let newPath;

                        const base = '/tegenafval';
                        
                        if (currentLang === 'en') {
                            if (currentPath === base + '/' || currentPath === base + '/nl/home') {
                                newPath = base + '/en/home';
                            } else if (currentPath === base + '/probleem' || currentPath === base + '/nl/probleem') {
                                newPath = base + '/en/probleem';
                            } else if (currentPath === base + '/oplossingen' || currentPath === base + '/nl/oplossingen') {
                                newPath = base + '/en/oplossingen';
                            } else if (currentPath === base + '/gemeente' || currentPath === base + '/nl/gemeente') {
                                newPath = base + '/en/gemeente';
                            } else {
                                newPath = base + '/en/home'; 
                            }
                        } else {
                            if (currentPath === base + '/en/home') {
                                newPath = base + '/';
                            } else if (currentPath === base + '/en/probleem') {
                                newPath = base + '/probleem';
                            } else if (currentPath === base + '/en/oplossingen') {
                                newPath = base + '/oplossingen';
                            } else if (currentPath === base + '/en/gemeente') {
                                newPath = base + '/gemeente';
                            } else {
                                newPath = base + '/'; 
                            }
                        }
                        
                        window.location.href = newPath;
                    });
                }

                function updateLanguage(lang) {
                    const navLinks = document.querySelectorAll('.main-nav a');
                    const languageToggle = document.getElementById('language-toggle');
                    // Set your base path here. If you change the base in astro.config.mjs, update this as well.
                    const base = '/tegenafval';

                    if (lang === 'en') {
                        // Update navigation links to English
                        navLinks[0].href = base + '/en/home';
                        navLinks[0].textContent = 'Home';
                        navLinks[1].href = base + '/en/probleem';
                        navLinks[1].textContent = 'The problem';
                        navLinks[2].href = base + '/en/oplossingen';
                        navLinks[2].textContent = 'How can I help?';
                        navLinks[3].href = base + '/en/gemeente';
                        navLinks[3].textContent = 'What about the municipality?';
                        
                        if (languageToggle) {
                            languageToggle.textContent = 'NL';
                        }
                    } else {
                        // Update navigation links to Dutch
                        navLinks[0].href = base + '/nl/home';
                        navLinks[0].textContent = 'Home';
                        navLinks[1].href = base + '/nl/probleem';
                        navLinks[1].textContent = 'Het probleem';
                        navLinks[2].href = base + '/nl/oplossingen';
                        navLinks[2].textContent = 'Wat kan ik zelf doen?';
                        navLinks[3].href = base + '/nl/gemeente';
                        navLinks[3].textContent = 'Wat doet de gemeente?';
                        
                        if (languageToggle) {
                            languageToggle.textContent = 'EN';
                        }
                    }
                }
            });
        </script>
    </head>
    <body>
        <main>
            <div class="content-container">
                <slot />
            </div>
        </main>
        <nav class="main-nav">
            <ul>
                <li><a href="/tegenafval/nl/home">Home</a></li>
                <li><a href="/tegenafval/nl/probleem">Het probleem</a></li>
                <li><a href="/tegenafval/nl/oplossingen">Wat kan ik zelf doen?</a></li>
                <li><a href="/tegenafval/nl/gemeente">Wat doet de gemeente?</a></li>
            </ul>
            <div class="nav-buttons">
                <button id="language-toggle" class="language-toggle">EN</button>
                <button id="dark-mode-toggle" class="dark-mode-toggle">üåô</button>
            </div>
        </nav>
    </body>
</html> 